generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                     Int              @id @default(autoincrement())
  first_name             String
  last_name              String
  email                  String           @unique
  password               String
  roles                  String[]
  group_access           group_access[]
  createdQuestions       question[]       @relation("CreatedQuestions")
  updatedQuestions       question[]       @relation("UpdatedQuestions")
  surveys                survey[]         @relation("CreatedSurveys")
  updatedSurveys         survey[]         @relation("UpdatedSurveys")
  surveyInstances        surveyInstance[] @relation("CreatedSurveyInstances")
  updatedSurveyInstances surveyInstance[] @relation("UpdatedSurveyInstances")
}

model group_access {
  id       Int   @id @default(autoincrement())
  group_id Int
  user_id  Int
  users    users @relation(fields: [user_id], references: [id])
}

model question {
  id             Int             @id @default(autoincrement())
  metadata       Json
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  group_id       Int
  status         question_status
  contentJson    Json?
  contentHtml    String?
  correctAnswers Json?

  createdById Int
  updatedById Int

  createdBy users @relation("CreatedQuestions", fields: [createdById], references: [id])
  updatedBy users @relation("UpdatedQuestions", fields: [updatedById], references: [id])
}

enum question_status {
  ACTIVE
  FINISHED
  DELETED
}

model survey {
  id          Int              @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  createdById Int
  updatedById Int
  mode        survey_mode
  instances   surveyInstance[]

  createdBy users @relation("CreatedSurveys", fields: [createdById], references: [id])
  updatedBy users @relation("UpdatedSurveys", fields: [updatedById], references: [id])
}

model surveyInstance {
  id          Int      @id @default(autoincrement())
  surveyId    Int
  name        String
  validFrom   DateTime
  validTo     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById Int
  updatedById Int

  survey    survey @relation(fields: [surveyId], references: [id])
  createdBy users  @relation("CreatedSurveyInstances", fields: [createdById], references: [id])
  updatedBy users  @relation("UpdatedSurveyInstances", fields: [updatedById], references: [id])
}

enum survey_mode {
  DESIGN
  ADAPTIV
}
